apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypteye-api
  namespace: default
  labels:
    app: crypteye-api
spec:
  selector:
    matchLabels:
      app: crypteye-api
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: crypteye-api
    spec:
      containers:
        - name: crypteye-web
          image: crypteye-api:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 256m
              memory: 1000Mi
            limits:
              cpu: 256m
              memory: 1000Mi
          livenessProbe:
            tcpSocket:
              port: {{ .Values.image.containerPort }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api
              port: {{ .Values.image.containerPort }}
            initialDelaySeconds: 20
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 20
          env:
            - name: DB_HOST
              value: mysql-service
            - name: DB_PORT
              value: "3306"
            - name: MYSQL_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: db_name
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
          ports:
            - containerPort: 3001
              name: crypteye-api-port
      restartPolicy: Always
